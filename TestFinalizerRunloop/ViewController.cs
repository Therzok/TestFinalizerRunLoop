// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Threading.Tasks;
using ObjCRuntime;
using System.Threading;
using CoreFoundation;
using CoreGraphics;

namespace TestFinalizerRunloop
{
    class MyWindow : NSWindow
    {
        public MyWindow(CGRect rect)
            : base(rect, NSWindowStyle.Closable | NSWindowStyle.Titled | NSWindowStyle.Resizable, NSBackingStore.Buffered, deferCreation: true)
        {
            //ReleasedWhenClosed = releaseWhenClosed;
            IsOpaque = true;
            IsMovable = true;
            ContentView = new NSView
            {
                Frame = new CGRect(0, 0, 400, 400),
            };
        }
    }

    public class WindowController : NSWindowController, INSWindowDelegate
    {
        public WindowController(NSWindow wnd) : base(wnd)
        {
        }

        public override void LoadWindow()
        {
            Console.WriteLine("Load window");
        }
    }
    public partial class ViewController : NSViewController
    {
        NSButton button;

        public ViewController(NSView view)
        {
            View = view;

            button = new NSButton { Title = "Create Views" };
            View.AddSubview(button);
            button.Frame = new CoreGraphics.CGRect(0, 0, 200, 50);
        }

        public override void LoadView()
        {
            Console.WriteLine("Load view");
        }

        public override void ViewDidAppear()
        {
            Console.WriteLine("ViewDidAppear");

            button.Activated += Button_Activated;

            base.ViewDidAppear();
        }

        public override void ViewDidDisappear()
        {
            Console.WriteLine("ViewDidDisappear");

            button.Activated -= Button_Activated;
            button.Target = null;

            base.ViewDidDisappear();
        }

        NSView MakePrintingSubviews()
        {
            var sv = new FinalizableView();
            sv.AddSubview(new FinalizableView());

            return sv;
        }

        private void Button_Activated(object sender, EventArgs e)
        {
            var button = (NSButton)sender;
            Console.WriteLine("Button activated: {0}", View.Window.Title);

            var sv = MakePrintingSubviews();

            Console.WriteLine("Expecting 2 non-null");
            button.AddSubview(sv);

            Console.WriteLine("Expecting 2 null");
            button.RemoveFromSuperview();

            Console.WriteLine("Expecting nothing");
            sv.RemoveFromSuperview();

            Console.WriteLine("Expecting nothing");
            button.AddSubview(sv);

            Console.WriteLine("Expecting 2 non-null");
            View.AddSubview(button);

            Console.WriteLine("Expecting 2 null");
            sv.RemoveFromSuperview();

            Console.WriteLine("Expecting 2 non-null");
            button.AddSubview(sv);

            Console.WriteLine("Expecting 2 null");


            var window = View.Window;
            NSApplication.SharedApplication.BeginInvokeOnMainThread(
                async () =>
            {
                //window.DangerousRetain();
                Console.WriteLine("Closing window {0}", window.ReleasedWhenClosed);
                //window.DangerousAutorelease();
                var controller = (NSWindowController)window.WindowController;
                //controller.DangerousRetain();
                //window.DangerousRetain();
                //controller.DangerousRetain();
                //window.Close();
                //window.DangerousRetain();
                controller.Close();
                //controller.Close();

//                await Task.Delay(1000);
            });
            
            //window.DangerousAutorelease();
            //controller.DangerousAutorelease();
        }

    }
}
